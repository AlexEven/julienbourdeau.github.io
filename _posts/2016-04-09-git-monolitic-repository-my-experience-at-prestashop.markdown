---
layout: post
title: 'Git monolitic repository or many repository - my experience at PrestaShop'
icon: fa-xx
author: Julien Bourdeau
date: '2016-04-09 08:55:18 +0100'
header-img: "assets/images/headers/xxx.jpg"
categories:
- Git
credits:
 - {name: Alex Even, url: "http://www.larevanchedalex.com/index.php?post/2016/01/04/Mojiko-Yahata"}
---

By now you are probably already convinced that git monolitic repository are better than multiple small repos. I mena there is so many talk about, everyboday says it, so it must be true. What a weirdo you'd be going agaist monolitic repo.

I went to the Symfony Live 2016 in PAris last week and fabien potencier talked about source code managment in Symfony. I believe symfo has found the very best way, combining the best of both solutions.

I dont want to go in a detailled comparison and I dont think I have enough legitimity to tell you which one is best. I thought I could share with you my experience with git and what I've learnt at prestashop.


### From SVN to Git

Until 2012, PrestaShop is managed with svn. As git and github grow in the opensource world, we switched to git and the repo is, of course, hosted on github.

I have to admit, when I arrived in 2014 I was a `git add . && git commit && git pull && git push` kinda guy. When I say `git pull`, I mean pull merge. Obvisouly.

At this time I had no preference between mono or many repos. I'm not very proud of it, but let's remember it was a long time ago ;)

### The context

Before I explain the strategy we chose, I have to explain the situation.

We have the main software PrestaShop and its extensions: theme and plugins. In the prestashop ecosystem plugins are called modules.

## The initial situation

When I arrived there was 2 repositories: PrsetaShop/PrestaShop for the core codebase. Theme is managed inside the core repository. Since you can't do anything without a theme, there was no point to take it out of the repo.

Modules are managed separately. It seems natural that a solfware should be able to work without plugins, so why would you force people to have plugins. They are all supposed to be interchangeable by anther one.

All modules developed by PrestaShop were version inside a single repository. This was easy for internal needs: automatic release generated by addons (our market place).

On install you get modules form addons and modules are

### The workflwo
